(()=>{var __webpack_modules__={871:()=>{eval("var STATIC_URLS = ['./site.webmanifest', './apple-touch-icon.png', './favicon-32x32.png', './favicon-16x16.png', './safari-pinned-tab.svg', './android-chrome-192x192.png', './android-chrome-512x512.png'];\nvar ANOTHER_URLS = ['./',\n// Alias for index.html\n'./bundle.js'];\nvar myCacheName = 'smoking-cache';\nself.addEventListener('install', function (evt) {\n  evt.waitUntil(caches.open(myCacheName).then(function (cache) {\n    return cache.addAll([].concat(STATIC_URLS, ANOTHER_URLS));\n  }));\n});\nself.addEventListener('activate', function (event) {\n  event.waitUntil(caches.keys().then(function (cacheNames) {\n    return cacheNames.filter(function (cacheName) {\n      return cacheName !== myCacheName;\n    });\n  }).then(function (cachesToDelete) {\n    return Promise.all(cachesToDelete.map(function (cacheToDelete) {\n      return caches[\"delete\"](cacheToDelete);\n    }));\n  }));\n});\nself.addEventListener('fetch', function (evt) {\n  if (evt.request.url.startsWith(self.location.origin)) {\n    evt.respondWith(caches.match(evt.request).then(function (response) {\n      return response || fetch(evt.request);\n    }));\n    evt.waitUntil(caches.open(myCacheName).then(function (cache) {\n      return fetch(evt.request).then(function (response) {\n        return cache.put(evt.request, response);\n      });\n    }));\n  }\n});\n\n//# sourceURL=webpack://stop-smoking/./src/sw.js?")}},__webpack_exports__={};__webpack_modules__[871]()})();